name: frontend-deploy

on:
  push:
    branches: [ main ]
    paths:
      - "site/**"
      - "assets/**"
      - ".github/workflows/frontend.yml"
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  STORAGE_ACCOUNT: saswewtsz1

jobs:
  deploy:
    runs-on: ubuntu-latest
    concurrency:
      group: frontend-deploy
      cancel-in-progress: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id:       ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id:       ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # ===== Upload mit passenden Cache-Headern =====

      # CSS: lang cachen
      - name: Upload CSS (immutable cache)
        run: |
          az storage blob upload-batch \
            --account-name "${{ env.STORAGE_ACCOUNT }}" \
            -d '$web' -s assets \
            --pattern "css/*" \
            --overwrite true \
            --content-cache-control "public, max-age=31536000, immutable"

      # Images: lang cachen
      - name: Upload images (immutable cache)
        run: |
          az storage blob upload-batch \
            --account-name "${{ env.STORAGE_ACCOUNT }}" \
            -d '$web' -s assets \
            --pattern "img/*" \
            --overwrite true \
            --content-cache-control "public, max-age=31536000, immutable"

      # JS: generell no-cache
      - name: Upload JS (no-cache)
        run: |
          az storage blob upload-batch \
            --account-name "${{ env.STORAGE_ACCOUNT }}" \
            -d '$web' -s assets \
            --pattern "js/*" \
            --overwrite true \
            --content-cache-control "no-cache"

      # config.js: strikt no-store (überschreibt den obigen Header nur für diese Datei)
      - name: Enforce no-store for config.js
        run: |
          az storage blob update \
            --account-name "${{ env.STORAGE_ACCOUNT }}" \
            -c '$web' \
            -n 'assets/js/config.js' \
            --content-cache-control "no-store"

      # HTML (site/): nie cachen
      - name: Upload HTML (no-cache)
        run: |
          az storage blob upload-batch \
            --account-name "${{ env.STORAGE_ACCOUNT }}" \
            -d '$web' -s site \
            --pattern "*.html" \
            --overwrite true \
            --content-cache-control "no-cache"

      - name: Website URL
        run: |
          az storage account show -n "${{ env.STORAGE_ACCOUNT }}" --query "primaryEndpoints.web" -o tsv
