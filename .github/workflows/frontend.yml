name: frontend-deploy

on:
  push:
    branches: [ main ]
    paths:
      - "site/**"
      - "assets/**"
      - ".github/workflows/frontend.yml"
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  STORAGE_ACCOUNT: saswewtsz1

jobs:
  deploy:
    runs-on: ubuntu-latest
    concurrency:
      group: frontend-deploy
      cancel-in-progress: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id:       ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id:       ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Uploads
      - name: Upload assets/ to $web
        run: |
          az storage blob upload-batch \
            --account-name "${{ env.STORAGE_ACCOUNT }}" \
            -d '$web' -s assets --overwrite true

      - name: Upload site/ to $web
        run: |
          az storage blob upload-batch \
            --account-name "${{ env.STORAGE_ACCOUNT }}" \
            -d '$web' -s site --overwrite true

      # Cache-Header
      - name: Set cache headers
        run: |
          SA="${{ env.STORAGE_ACCOUNT }}"

          # Lang cachen: CSS/Images
          az storage blob update-batch --account-name "$SA" -d '$web' \
            --pattern "assets/css/*" --content-cache-control "public, max-age=31536000, immutable"
          az storage blob update-batch --account-name "$SA" -d '$web' \
            --pattern "assets/img/*" --content-cache-control "public, max-age=31536000, immutable"

          # JS generell: no-cache (damit Updates greifen)
          az storage blob update-batch --account-name "$SA" -d '$web' \
            --pattern "assets/js/*" --content-cache-control "no-cache"

          # Config explizit: no-store (API_BASE-Ã„nderungen sofort)
          az storage blob update --account-name "$SA" -c '$web' \
            -n 'assets/js/config.js' \
            --content-cache-control "no-store"

          # HTML nie cachen
          az storage blob update-batch --account-name "$SA" -d '$web' \
            --pattern "*.html" --content-cache-control "no-cache"

      - name: Website URL
        run: |
          az storage account show -n "${{ env.STORAGE_ACCOUNT }}" --query "primaryEndpoints.web" -o tsv
